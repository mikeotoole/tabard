%tr{ class: (invitef.object.persisted? or  not invitef.object.marked_for_destruction?) ? '' : 'dim' }
  %td.cinch
    = image_tag invitef.object.user_profile_avatar_url(:tiny), class: 'avatar'
  %td.cinch
    %fieldset
      %ol
        = invitef.input :character_proxy_id, as: :radio_buttons, label: false, collection: [[invitef.object.user_profile_display_name, '']]
  %td.characters
    = invitef.input :character_proxy_id, as: :radio_buttons, label: false, wrapper: false, collection: invitef.object.user_profile.available_character_proxies(community, community_game).collect{|cp| cp = [image_tag(cp.character.avatar_url(:icon), class: "avatar icon #{cp.roster_assignments.map{|ra| "sg_#{ra.community_game_id}"}.join(' ')}") + cp.character.name, cp.id] }
  %td.actions
    %div
      %a{ class: "toggle #{(invitef.object.persisted? or not invitef.object.marked_for_destruction?) ? 'approve' : 'reject'}", meta: 'Invite/Uninvite' } Toggle
    = invitef.input :_destroy, as: :hidden, input_html: { value: (invitef.object.persisted? or  not invitef.object.marked_for_destruction?) ? false : true }
    = invitef.input :user_profile_id, as: :hidden
