- content_for :header do
  = javascript_include_tag "moment.min"
  = javascript_include_tag "events"

%fieldset
  %ol
    = f.input :name
    = f.input :body
    %li{ class: "datetime #{f.object.errors[:start_time].any? ? 'field_with_errors' : ''}" }
      %label Start
      %span= f.input :start_time_date, as: :hidden, wrapper: :none
      %span
        %input{ type: 'text', class: 'nicedate', readonly: 'readonly', value: event.start_time_date.to_s != '' ? event.start_time_date.to_date.strftime("%A, %B %d, %Y") : '' }
      = f.input :start_time_hm, as: :string, label: false, placeholder: 'Time', wrapper_tag: :span, wrapper_html: { class: 'time' }
      %mark.error= f.object.errors[:start_time].first
    %li{ class: "datetime #{f.object.errors[:start_time].any? ? 'field_with_errors' : ''}" }
      %label End
      %span= f.input :end_time_date, as: :hidden, wrapper: :none
      %span
        %input{ type: 'text', class: 'nicedate', readonly: 'readonly', value: event.end_time_date.to_s != '' ? event.end_time_date.to_date.strftime("%A, %B %d, %Y") : '' }
      = f.input :end_time_hm, as: :string, label: false, placeholder: 'Time', wrapper_tag: :span, wrapper_html: { class: 'time' }
      %mark.error= f.object.errors[:end_time].first
    = f.input :supported_game_id, label: 'Game', collection: [['— None —','']].concat(current_community.supported_games.includes(:community, :game).collect {|c| c = [c.smart_name, c.id]}), as: :radio, wrapper_html: { class: 'select' }
    = f.input :is_public, label: 'Viewable by all members?'
%hr
%h2 Invitee list
%table.invites
  %thead
    %tr
      %th.cinch{ colspan: 2 } Users
      %th.characters Invited Characters
      %th.check
  %tbody
    = f.simple_fields_for :invites do |invitef|
      = render 'invite_row', invitef: invitef, event: event, community: current_community, supported_game: event.supported_game
  %tfoot
    %td{ colspan: 4 }