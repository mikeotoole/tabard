- content_for :footer do
  = javascript_include_tag "moment.min"
  = javascript_include_tag "events"

%fieldset
  %ol
    = f.input :name
    = f.input :body
    %li{ class: "datetime #{f.object.errors[:start_time].any? ? 'with-errors' : ''}" }
      %label Start
      %span= f.input :start_time_date, as: :hidden, wrapper: :none
      %span
        %input{ type: 'text', class: 'nicedate', readonly: 'readonly', value: event.start_time_date.to_s != '' ? event.start_time_date.to_date.strftime("%A, %B %e, %Y") : '' }
      = f.input :start_time_hm, as: :string, label: false, placeholder: 'Time', wrapper_tag: :span, wrapper_html: { class: 'time' }
      %mark.error= f.object.errors[:start_time].first
    %li{ class: "datetime #{f.object.errors[:start_time].any? ? 'with-errors' : ''}" }
      %label End
      %span= f.input :end_time_date, as: :hidden, wrapper: :none
      %span
        %input{ type: 'text', class: 'nicedate', readonly: 'readonly', value: event.end_time_date.to_s != '' ? event.end_time_date.to_date.strftime("%A, %B %e, %Y") : '' }
      = f.input :end_time_hm, as: :string, label: false, placeholder: 'Time', wrapper_tag: :span, wrapper_html: { class: 'time' }
      %mark.error= f.object.errors[:end_time].first
    = f.input :community_game_id, label: 'Game', collection: [['- None -','']].concat(current_community.community_games.includes(:community, :game).collect {|c| c = [c.smart_name, c.id]}), as: :radio_buttons, wrapper_html: { class: 'select with-label game' }
    = f.input :is_public, label: 'Viewable by all members?'
%hr
%h2 Invitee list
#invites
  %script{ type: 'text/javascript' }
    window.communityMembers = [
    - membersHashes = current_community.member_profiles.map {|profile| "{ id: \"#{profile.id}\", name: \"#{profile.display_name}\", url: \"#{user_profile_url profile}\", avatar: \"#{profile.avatar_url :small}\" }\n" }
    = raw membersHashes.join ','
    ]
  %menu
    %input{ type: 'text', name: 'term', autocomplete: 'off', placeholder: 'Player or character name', data: { url: autocomplete_members_url(view: 'event-invites') } }
    %button.all Invite Everyone
    %button.none Remove All
  %ul
    - event.invites.each_with_index do |invite, _i|
      = render 'invite_fields', invite: invite, user_profile: invite.user_profile, character: invite.character, _i: _i