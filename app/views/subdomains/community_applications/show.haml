- title "Community Application | #{current_community.name}"

#breadcrumb
  %ol
    %li= link_to "Community Applications", community_applications_url
    %li
      %span= @community_application.user_profile_display_name

- unless @community_application.is_pending? or @community_application.left?
  %h2.status
    = "#{@community_application.status} by "
    = link_to @community_application.status_changer.name, user_profile_url(@community_application.status_changer)
- if @community_application.left?
  %h2.status
    = link_to @community_application.status_changer.name, user_profile_url(@community_application.status_changer)
    = "has left the community"
.submission
  = simple_form_for @community_application, url: accept_community_application_path, method: :post do |f|
    .sidebar
      .submitter
        %h2 Applicant
        %a{ href: user_profile_url(@community_application.user_profile, subdomain: false) }
          = image_tag @community_application.user_profile_avatar_url(:tiny), class: 'avatar'
          = @community_application.user_profile_display_name

      - if @community_application.character_proxies.size > 0
        .characters
          %h2 Characters
          - @community_application.character_proxies.each do |character_proxy|
            %ul
              %li
                = image_tag character_proxy.avatar_url(:tiny), class: 'avatar'
                %span.name= character_proxy.name
                %span.game= character_proxy.game_name
            - if @community_application.is_pending? or @community_application.rejected? and can? :accept, @community_application
              = hidden_field_tag "proxy_hash[#{character_proxy.id}]", -1
              = f.simple_fields_for @community_application.character_proxies, character_proxy, index: character_proxy.id do |pf|
                .select{ class: character_proxy.errors.any? ? 'field_with_errors' : '' }
                  %ul
                    %li
                      = radio_button_tag "proxy_hash[#{character_proxy.id}]", ''
                      = label_tag "proxy_hash_#{character_proxy.id}_", 'Reject Character'
                    - @supported_games.where(game_type: character_proxy.game.class.to_s).each do |sg|
                      %li
                        = radio_button_tag "proxy_hash[#{character_proxy.id}]", sg.id, (params[:proxy_hash] and sg.id.to_s == params[:proxy_hash][character_proxy.id.to_s].to_s)
                        = label_tag "proxy_hash_#{character_proxy.id}_#{sg.id}", sg.smart_name
                  - if character_proxy.errors.any?
                    %mark.error= character_proxy.errors.full_messages.first

    - if @community_application.submission.answers.size > 0
      .questions
        %h2 Question Answers
        %dl
          - @community_application.submission.answers.each do |answer|
            %dt= answer.question_body
            %dd= answer.body

    - unless @community_application.accepted? or @community_application.applicant_is_a_member? or @community_application.no_longer_a_member?
      %p.submit
        - if can? :accept, @community_application
          = submit_tag 'Accept', class: 'button', confirm: "Accepting this application will add #{@community_application.user_profile_display_name} to the community. Continue?"
        - if not @community_application.rejected? and can? :reject, @community_application
          = link_to 'Reject', reject_community_application_path, method: :post, class: 'button', confirm: "Are you sure you want to reject #{@community_application.user_profile_display_name}'s application?"

  - if @community_application.comments.any? or can? :comment, @community_application
    - content_for :header do
      = javascript_include_tag "comments"
    %h2.comments Comments
    %aside.comments
      - if @comments.size > 0
        = paginate @comments
        %ol
          - @comments.each do |comment|
            = render "subdomains/comments/comment", comment: comment
        = paginate @comments
      - if can? :comment, @community_application
        #newcomment
          %h3= "Post a New Comment â€” not visible to #{@community_application.user_profile_display_name}"
          = render 'subdomains/comments/form', comment: @community_application.comments.new