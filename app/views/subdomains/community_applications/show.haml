- title "Community Application | #{current_community.name}"

- unless @community_application.is_pending?
  %h2.status
    = "#{@community_application.status} by "
    = link_to @community_application.status_changer.name, user_profile_url(@community_application.status_changer)

.submission
  = simple_form_for @community_application, :url => accept_community_application_path, :method => :post do |f|
    .sidebar
      .submitter
        %h2 Applicant
        %a{ :href => user_profile_url(@community_application.user_profile, :subdomain => false) }
          = image_tag @community_application.user_profile_avatar_url(:tiny), :class => 'avatar'
          = @community_application.user_profile_display_name

      - if @community_application.character_proxies.size > 0
        .characters
          %h2 Characters
          - @community_application.character_proxies.each do |character_proxy|
            %ul
              %li
                = image_tag character_proxy.avatar_url(:tiny), :class => 'avatar'
                %span.name= character_proxy.name
                %span.game= character_proxy.game_name
            - if @community_application.is_pending? and can? :accept, @community_application
              = f.simple_fields_for @community_application.character_proxies, character_proxy, :index => character_proxy.id do |pf|
                .select= pf.input :id, :as => :radio, :wrapper => false, :label => false, :input_html => { :name => "proxy_hash[#{character_proxy.id}]" }, :collection => @supported_games.where(:game_type => character_proxy.game.class.to_s).collect {|sg| [ "#{sg.name} — #{sg.game_name}", sg.id ] }

    - if @community_application.submission.answers.size > 0
      .questions
        %h2 Question Answers
        %dl
          - @community_application.submission.answers.each do |answer|
            %dt= answer.question_body
            %dd= answer.body

    - unless @community_application.accepted?
      %p.submit
        - if can? :accept, @community_application
          = submit_tag 'Accept', :class => 'button', :confirm => "Accepting this application will add #{@community_application.user_profile_display_name} to the community. Continue?"
        - if not @community_application.rejected? and can? :reject, @community_application
          = link_to 'Reject', reject_community_application_path, :method => :post, :class => 'button', :confirm => "Are you sure you want to reject #{@community_application.user_profile_display_name}'s application?"

  - if @community_application.comments.any? or can? :comment, @community_application
    = javascript_include_tag "comments"
    %h2.comments Comments
    %aside.comments
      - if @community_application.comments.size > 0
        %ol
          - @community_application.comments.each do |comment|
            = render "subdomains/comments/comment", :comment => comment
      - if can? :comment, @community_application
        #newcomment
          %h3= "Post a New Comment — not visible to #{@community_application.user_profile_display_name}"
          = render 'subdomains/comments/form', :comment => @community_application.comments.new