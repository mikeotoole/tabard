- title "Community Settings | #{@community.name}"

- content_for :header do
  = stylesheet_link_tag "application/colorpicker"

- content_for :footer do
  = javascript_include_tag "colorpicker"
  = javascript_include_tag "community_settings"

%h1 Community Settings

= simple_form_for @community, url: update_community_settings_url, html: {novalidate: true} do |f|

  %section.left
    %h2 Configuration
    %fieldset
      %ol
        = f.input :slogan, hint: "#{Community::MAX_SLOGAN_LENGTH} characters. Optional. This is displayed beneath your community title.", input_html: { maxlength: Community::MAX_SLOGAN_LENGTH }
        = f.input :pitch, as: :string, hint: "#{Community::MAX_PITCH_LENGTH} characters. Optional. This is what others will see on community listing pages.", input_html: { maxlength: Community::MAX_PITCH_LENGTH }
        = f.input :home_page_id, as: :radio, label: "Public Home Page", hint: 'This page is displayed to visitors to your community who are not members.', collection: current_community.pages, wrapper_html: { class: 'select with-label' }
        = f.input :is_accepting_members, label: "Enable new applications."
        = f.input :email_notice_on_application, label: "Receive a notification when an application is received."
        = f.input :is_public_roster, as: :boolean, label: "Public member list."
        = f.input :is_protected_roster, as: :boolean, label: "Roster changes require approval.", hint: "For example, a member adding a character to the community."

  %section.right
    %h2 Appearance
    %fieldset
      %ol
        %li
          %label Theme
          = f.association :theme, as: :radio, collection: Theme.all.collect{|theme| theme = [raw(image_tag("themes/thumbnails/#{theme.thumbnail}", class: 'big', theme: theme.css)) + ' ' + theme.name, theme.id]}, label: false, wrapper_tag: :div, wrapper_html: {class: 'select'}
        %li
          %label Custom Background Image
          = image_tag(@community.background_image_url :thumbnail) unless @community.background_image_url == '/assets/application/blank.png'
          = f.input :background_image, as: :file, label: false
        - unless @community.background_image_url == '/assets/application/blank.png'
          = f.input :remove_background_image, as: :boolean, label: 'Remove image'
        = f.input :background_color, as: :string, label: 'Optional Background Color', input_html: { maxlength: 6 }, wrapper_html: { class: 'color' }
        = f.input :title_color, as: :string, label: 'Optional Title Text Color', input_html: { maxlength: 6 }, wrapper_html: { class: 'color' }

  %p.submit
    = f.button :submit, 'Save Changes'
    = link_to 'Remove community', community_remove_confirmation_url, class: 'secondary'