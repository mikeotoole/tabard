= f.input :name, :input_html => { :maxlength => WowCharacter::MAX_NAME_LENGTH }
= f.input :server_name, :as => :radio, :required => true, :label => 'Server', :collection => Wow.all_servers, :wrapper_html => { :class => 'select' }, :input_html => { name: 'server_name' }
= f.input :faction, :as => :radio, :required => true, :collection => Wow.all_factions, :wrapper_html => { :class => 'faction select', :affects => 'race' }, :input_html => { name: 'faction' }
= render :partial => 'shared/affected_dropdown', :locals => { f: f, affected_by: 'faction', affected_by_value: wow_character.faction, label: 'Race', field: 'race', field_value: wow_character.race, collection: WowCharacter.faction_race_collection, affects: 'char_class' }
= render :partial => 'shared/affected_dropdown', :locals => { f: f, affected_by: 'race', affected_by_value: (wow_character.faction && wow_character.race ? "#{wow_character.faction}_#{wow_character.race.gsub(/\s/,'_')}" : ''), label: 'Class', field: 'char_class', field_value: wow_character.char_class, collection: WowCharacter.faction_race_class_collection }
= f.input :level, :as => :string, :input_html => { :maxlength => 2 }, :wrapper_html => { :class => 'short' }
= f.input :gender, :as => :radio, :required => true, :collection => WowCharacter::VALID_GENDERS
= f.input :about, :as => :text, :label => 'Optional Description', :input_html => { :rows => 5 }
%li.avatar{ :class => f.object.errors.any? ? 'field_with_errors' : '' }
  - if !wow_character.persisted? or !wow_character.avatar_url.to_s or f.object.errors.any?
    = image_tag 'application/avatar@240.png'
  - else
    = image_tag(wow_character.avatar_url :large)
  %br
  = f.input :avatar, :wrapper => false, :hint => 'Maxium file size of 2mb. GIF, JPG, PNG.'
  = f.input :remote_avatar_url, :label => "or image URL", :wrapper => false
  = f.input :remove_avatar, :as => :boolean, :label => "Remove avatar"