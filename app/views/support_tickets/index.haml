- title 'Crubmlin Support'

#body
  %h1 Crumblin Support

  - unless user_signed_in?
    %p
      Please
      = link_to 'log into Crumblin', new_user_session_url
      to create or update your support tickets.
  
  - else
    #submenu
      = link_to '+ New issue', new_support_url, class: 'button'
  
    - if current_user.support_tickets.any?
      %table.tickets
        %thead
          %tr
            %th Issue
            %th Status
            %th
        %tbody
          - @support_tickets.each do |ticket|
            %tr{ class: ticket.status.downcase().gsub(/[^a-z]/, '') }
              %td
                = link_to truncate(ticket.body, length: 70, separator: ' '), support_url(ticket)
                - if ticket.support_comments.any? and ticket.status != 'Closed'
                  - comment = ticket.support_comments.last
                  %blockquote
                    = image_tag comment.avatar_url(:tiny)
                    = truncate(comment.body, length: 70, separator: ' ')
              %td
                - case ticket.status
                - when 'Pending Review'
                  %time= "Opened #{time_ago_in_words(ticket.created_at)} ago"
                - when 'In Progress'
                  %time= "Updated #{time_ago_in_words(ticket.updated_at)} ago"
                - when 'Closed'
                  %time= "Closed #{time_ago_in_words(ticket.updated_at)} ago"
              %td.actions
                - unless ticket.status == 'Closed'
                  %div
                    %a.comment= 'Add a comment'
                    = link_to 'Close ticket', support_status_url(ticket, 'Closed'), class: 'close', method: :put, confirm: 'Really close this ticket?'
      = paginate @support_tickets