#body
  %h1 My Announcements

  - if current_user.announcements.any?
    = paginate @acknowledgements
    = form_tag announcements_batch_mark_as_seen_url, :method => :put do
      %table
        %thead
          %tr
            %th.check
            %th Announcement
            %th Community
            %th Date
        %tbody
          - @acknowledgements.each do |acknowledgement|
            - announcement = acknowledgement.announcement
            - if acknowledgement.has_been_viewed?
              %tr.read
                %td{ :class => 'check compact' } âœ”
                %td
                  %strong= link_to announcement.name, announcement_url(announcement, :subdomain => announcement.subdomain)
                %td= link_to announcement.community_name, root_url(:subdomain => announcement.subdomain)
                %td
                  %time
                    = l announcement.created_at, :format => :date_short
                  %time
                    = l announcement.created_at, :format => :time_12
            - else
              %tr.unread
                %td.check
                  = check_box_tag "ids[#{announcement.id}]", true, false, :id => "discussion_id_#{announcement.id}"
                  %label{ :for => "discussion_id_#{announcement.id}" }
                %td
                  %strong= link_to announcement.name, announcement_url(announcement, :subdomain => announcement.subdomain)
                  %br/
                  = truncate announcement.body, :length => 150, :separator => ' '
                %td= link_to announcement.community_name, root_url(:subdomain => announcement.subdomain)
                %td
                  %time
                    = l announcement.created_at, :format => :date_short
                  %time
                    = l announcement.created_at, :format => :time_12
        %tfoot
          %tr
            %td{ :colspan => 4 }
              -if current_user.unread_announcements.size > 0
                %button{ :class => 'read' }
                  %span Mark selected as read
    = paginate @acknowledgements