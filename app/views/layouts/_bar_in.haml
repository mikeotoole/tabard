= link_to 'Guild.io™', user_profile_url(current_user.user_profile, subdomain: false, anchor: 'characters'), class: 'logo'

%ul.menu
  %li
    %span Find
    %ul
      %li= link_to 'Communities', communities_url(subdomain: false)
      %li= link_to 'Users', user_profiles_url(subdomain: false)

.communities
  %span= (current_community and current_user.communities.include? current_community) ? shorten_words(current_community.name) : 'My Communities'
  %ol
    - current_user.communities.includes(:admin_profile).each do |community|
      %li= link_to shorten_words(community.name), actual_community_url(community), class: current_community == community ? 'current' : '', icon: current_user.user_profile == community.admin_profile ? '✭' : '◎'
    - unless current_user.communities.any?
      = link_to 'Find a community', communities_url(subdomain: false), icon: '◎'
    - if current_user.owned_communities.size < Community::MAX_OWNED_COMMUNITIES
      %li.extra
        = link_to 'Add a community', new_community_url(subdomain: false), icon: '✛'

%ul.dashboard
  %li{ class: 'icon calendar' }
    = link_to "Event Invites", user_profile_url(current_user.user_profile, subdomain: false, anchor: 'invites'), (current_user.invites.not_responded_to.fresh.size > 0 ? { meta: current_user.invites.not_responded_to.fresh.size } : {})
  %li{ class: 'icon notice' }
    = link_to "Announcements", user_profile_url(current_user.user_profile, subdomain: false, anchor: 'announcements'), (current_user.unread_announcements.size > 0 ? { meta: current_user.unread_announcements.size } : {})
  %li{ class: 'icon envelope' }
    = link_to "Messages", inbox_url(subdomain: false), (current_user.unread_messages.size > 0 ? { meta: current_user.unread_messages.size } : {})

.avatar
  = link_to image_tag(current_user.avatar_url :tiny), user_profile_url(current_user.user_profile, subdomain: false, anchor: 'characters')
  %ul
    %li.characters= link_to 'My Characters', user_profile_url(current_user.user_profile, subdomain: false, anchor: 'characters'), icon: 'Ξ'
    %li.activities= link_to 'Activity Stream', user_profile_url(current_user.user_profile(subdomain: false)), icon: '༄'
    %li.profile= link_to 'Edit User Profile', edit_user_profile_url(current_user.user_profile), icon: '✎'
    %li.settings= link_to 'Account Settings', account_settings_url(subdomain: "secure", protocol: (Rails.env.development? ? "http://" : "https://")), icon: '✲'
    %li.logout= link_to 'Logout', destroy_user_session_url, method: :delete, icon: '✕'