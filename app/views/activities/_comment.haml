- unless comment.blank? or comment.is_removed
  %li.comment{ class: comment_class_names(comment), created_at: comment.created_at }
    %blockquote
      %a.avatar{ href: user_profile_url(comment.poster, subdomain: "www") }
        - if !comment.is_removed
          = image_tag comment.poster.avatar_url :small
      %span.meta
        - if controller_name == 'user_profiles' and user_profile == comment.user_profile
          = last_action_word(comment).capitalize
        - else
          %strong= link_to shorten_words(comment.poster_name, 17), user_profile_url(comment.user_profile, subdomain: 'www', format: :js), remote: true, class: 'profile', meta: shorten_words(comment.user_profile_display_name)
          = last_action_word(comment)
        a comment &mdash;
        %time= "#{time_ago_in_words(comment.updated_at)} ago"
        - case comment.original_commentable_type
        - when 'Announcement'
          - announcement = Announcement.find_by_id(comment.original_commentable_id)
          - if !!announcement
            in
            = link_to_if (user_signed_in? and current_user.in_community(comment.community).can? :show, announcement), shorten_words(announcement.name), announcement_url(announcement, subdomain: comment.community_subdomain)
        - when 'Discussion'
          - discussion = Discussion.find_by_id(comment.original_commentable_id)
          - if !!discussion
            in
            = link_to_if (user_signed_in? and current_user.in_community(comment.community).can? :show, discussion), shorten_words(discussion.name), discussion_url(discussion, subdomain: comment.community_subdomain)
        - when 'CommunityApplication'
          - community_application = CommunityApplication.find_by_id(comment.original_commentable_id)
          - if !!community_application
            on
            = link_to_if (user_signed_in? and current_user.in_community(comment.community).can? :show, community_application), 'Community Application', community_application_url(community_application, subdomain: comment.community_subdomain), meta: community_application.user_profile_display_name
      %p
        - unless comment.is_removed
          %span.body
            = truncate shorten_words(comment.body), length: 150, omission: 'â€¦'